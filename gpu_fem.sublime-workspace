{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Runasmb",
				"RunAsmBatchAnalysis"
			],
			[
				"size",
				"size_t"
			],
			[
				"m_maxwork",
				"m_maxworkdim"
			],
			[
				"m_maxwo",
				"m_maxworkdim"
			],
			[
				"getD",
				"getDeviceInfo"
			],
			[
				"stiffal",
				"stiffalgoexisted"
			],
			[
				"devi",
				"deviceType"
			],
			[
				"De",
				"DeviceMode"
			],
			[
				"outfileW",
				"outfileWriteHeader"
			],
			[
				"outFile",
				"outfileInit"
			],
			[
				"outapp",
				"outappendlbl"
			],
			[
				"el",
				"elmconnsz"
			],
			[
				"Realloca",
				"ReallocateForBandsize"
			],
			[
				"numele",
				"numelem"
			],
			[
				"m_Elem",
				"m_ElemAdjVector"
			],
			[
				"Buil",
				"BuildMetisMesh"
			],
			[
				"femcolo",
				"femcolobj"
			],
			[
				"numbl",
				"numblocks"
			],
			[
				"SpMVCo",
				"SpMVCoalUR"
			],
			[
				"tsolve",
				"tsolvegpu1"
			],
			[
				"tso",
				"tsolvegpu3"
			],
			[
				"ax",
				"AxyGPUTest"
			],
			[
				"vector",
				"vector_y"
			],
			[
				"locle",
				"locleny"
			],
			[
				"get_lo",
				"get_global_id"
			],
			[
				"Parall",
				"ParallelReduction"
			],
			[
				"get_local",
				"get_local_id"
			],
			[
				"get_",
				"get_group_id"
			],
			[
				"cl",
				"CLK_LOCAL_MEM_FENCE"
			],
			[
				"test",
				"testmatrix"
			],
			[
				"matD",
				"matDim"
			],
			[
				"vecto",
				"vector_y"
			],
			[
				"auto",
				"Autocomplete"
			],
			[
				"stridei",
				"strideidx"
			],
			[
				"loc",
				"locid"
			],
			[
				"fpaboim",
				"fpaboim_gpufem"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Test/AxyGPUTest.cpp",
			"settings":
			{
				"buffer_size": 11757,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/SPRmatrix/ELLmatrix.cc",
			"settings":
			{
				"buffer_size": 19928,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Searching 73 files for \"memalloc\"\n\nC:\\Users\\fpaboim\\Desktop\\parallel_projects\\GPU_FEM\\fpaboim_gpufem\\src\\FEM\\StiffAlgoGPU.cc:\n   89      allocVector(nelemdof * nelemdof * numelem, true);\n   90  \n   91:   double memalloc_time = omp_get_wtime();  // TIMESTAMP\n   92  \n   93    // Allocate memory on the device to hold our data and store the results into\n   ..\n  155        opencl_time-alloc_time);\n  156      printf(\"    o-Kernel Creation Time:%.3fms\\n\", perfstart_time-opencl_time);\n  157:     printf(\"    x-Kaux Allocation Time:%.3fms\\n\", memalloc_time-perfstart_time);\n  158      printf(\"    x-WriteBuffer Alloc/Enqueue Time + GaussPts:%.3fms\\n\",\n  159:       writebuff_time-memalloc_time);\n  160      printf(\"    x-Kernel Set Time:%.3fms\\n\", kernel_time-writebuff_time);\n  161      printf(\"    x-Enqueue Time:%.3fms\\n\", enqueue_time-kernel_time);\n\nC:\\Users\\fpaboim\\Desktop\\parallel_projects\\GPU_FEM\\fpaboim_gpufem\\src\\FEM\\StiffAlgoGpuOmp.cc:\n   89      allocVector(nelemdof * nelemdof * numelem, true);\n   90  \n   91:   double memalloc_time = omp_get_wtime();  // TIMESTAMP\n   92  \n   93    // Allocate memory on the device to hold our data and store the results into\n   ..\n  178        opencl_time-alloc_time);\n  179      printf(\"    o-Kernel Creation Time:%.3fms\\n\", perfstart_time-opencl_time);\n  180:     printf(\"    x-Kaux Allocation Time:%.3fms\\n\", memalloc_time-perfstart_time);\n  181      printf(\"    x-WriteBuffer Alloc/Enqueue Time + GaussPts:%.3fms\\n\",\n  182:       writebuff_time-memalloc_time);\n  183      printf(\"    x-Kernel Set Time:%.3fms\\n\", kernel_time-writebuff_time);\n  184      printf(\"    x-Enqueue Time:%.3fms\\n\", enqueue_time-kernel_time);\n\nC:\\Users\\fpaboim\\Desktop\\parallel_projects\\GPU_FEM\\fpaboim_gpufem\\src\\SPRmatrix\\ELLmatrix.cc:\n   79    } else {  // Else inserts element into matrix\n   80      // If matrix is full grows matrix size\n   81:     #pragma omp critical (memalloc)\n   82      {\n   83        InsertElem(rownnz, pos, val, col, row);\n   ..\n  100      m_matdata[pos] += val;\n  101    } else { // Else inserts element into matrix\n  102:     #pragma omp critical (memalloc)\n  103      {\n  104        InsertElem(rownnz, pos, val, col, row);\n  ...\n  531  ////////////////////////////////////////////////////////////////////////////////\n  532  int ELLmatrix::ReallocateForBandsize(const int band) {\n  533:   #pragma omp critical (memalloc)\n  534    {\n  535      m_maxrowlen = band;\n\n9 matches across 3 files\n",
			"settings":
			{
				"buffer_size": 2444,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/OpenCL/clKernels/LAopsEll.cl",
			"settings":
			{
				"buffer_size": 12502,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/interface.cpp",
			"settings":
			{
				"buffer_size": 21004,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test_models/Q8/_Q8_nocol_test.txt",
			"settings":
			{
				"buffer_size": 7008,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test_models/Q8/_Q8_col_test.txt",
			"settings":
			{
				"buffer_size": 4228,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/FEM/StiffAlgoGpuOmp.cc",
			"settings":
			{
				"buffer_size": 15624,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/FEM/StiffAlgoCPU.cc",
			"settings":
			{
				"buffer_size": 14324,
				"line_ending": "Windows"
			}
		},
		{
			"file": "gpufem_notes.md",
			"settings":
			{
				"buffer_size": 7451,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/FEM/fem.h",
			"settings":
			{
				"buffer_size": 3185,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/Test/main.cpp",
			"settings":
			{
				"buffer_size": 2102,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test_models/Q8/Q8_2_nocol.txt",
			"settings":
			{
				"buffer_size": 4339,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test_models/Q8/Q8_3_nocol.txt",
			"settings":
			{
				"buffer_size": 4337,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test_models/Q8/Q8_2_col.txt",
			"settings":
			{
				"buffer_size": 4340,
				"line_ending": "Windows"
			}
		},
		{
			"file": "test_models/Q8/Q8_3_col.txt",
			"settings":
			{
				"buffer_size": 4340,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "FEMGPU_build",
	"command_palette":
	{
		"height": 375.0,
		"selected_items":
		[
			[
				"pack re",
				"Package Control: Remove Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"mark pre",
				"Markdown Preview: preview in Browser"
			],
			[
				"mark prev",
				"Markdown Preview: preview in Browser"
			],
			[
				"mark che",
				"Markdown Preview: open Markdown Cheat sheet"
			],
			[
				"mark",
				"Markdown Preview: preview in Browser"
			],
			[
				"package ins",
				"Package Control: Install Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"preview",
				"Markdown Preview: preview in Browser"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"intall",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				":e",
				":$ - EOF"
			],
			[
				":e .",
				"Snippet: $1.begin(), $1.end()"
			],
			[
				":alignment",
				"Preferences: Alignment File Settings – Default"
			],
			[
				"book",
				"Bookmarks: Toggle"
			],
			[
				"snippet prin",
				"Snippet: printf …"
			],
			[
				"",
				"Snippet: printf …"
			],
			[
				"toggle mini",
				"View: Toggle Minimap"
			],
			[
				":",
				"View: Toggle Minimap"
			]
		],
		"width": 407.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": true,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/OpenCL/OCLwrapper.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgoGPU.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgoCPU.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/proj/GPU_FEM_Sparse.vcxproj",
		"/C/Program Files (x86)/AMD APP/include/CL/cl.h",
		"/C/Program Files (x86)/AMD APP/include/CL/opencl.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q8/_Q8_2_nocol_test.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Utils/fileIO.cc",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/User/Default (Windows).sublime-keymap",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/interface.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/fem.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgoGpuOmp.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgoGPU.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgo.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/OpenCL/OCLwrapper.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/FemTest.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/main.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgoGpuOmp.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/interface.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgoCPU.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/StiffAlgo.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/Report/matlab/CG.m",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/Report/matlab/runcg.m",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/Report/matlab/preCG.m",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q8/Q8_2_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q8/Q8_3_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/OpenCL/clKernels/LAopsEll.cl",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/OpenCL/clKernels/gpuCG.cl",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/Report/matlab/runPreCGBench.m",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/VintageLines/create_icons.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/SPRmatrix/SPRmatrix.h",
		"/C/Users/fpaboim/Desktop/notes.md",
		"/C/Programming/ReferenceCode/OS_bobble_v1.1.fla",
		"/C/Programming/ReferenceCode/OS_zelda_v1.3.fla",
		"/C/Programming/CatMother/script/test/test.lua",
		"/C/Programming/CatMother/fsm/Test/test.lua",
		"/C/Programming/CatMother/deadjustice/docs/deadjustice.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/misulatool100win/src/main_dialog.lua",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q8/Q8_3_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q8/Q8_2_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk20/brk20_3_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk20/brk20_2_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q4/Q4_3_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q4/Q4_2_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q4/Q4_2_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Q4/Q4_3_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk20/brk20_2_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk20/brk20_3_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/OpenCL/clKernels/gpuCG_ELL.cl",
		"/C/Users/fpaboim/Downloads/mandelbrot.b",
		"/C/Windows/System32/drivers/etc/hosts - Copy",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk8/brk8_3_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk8/brk8_2_nocol.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk8/brk8_3_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/Brk8/brk8_2_col.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Lua/maindlg.lua",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/Report/matlab/conjugate_grad.m",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Matlab/Matlab.tmLanguage",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Objective-C/Objective-C.tmLanguage",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/gpufem_notes.md",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/User/MarkdownPreview.sublime-settings",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Markdown Preview/sample.md",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Markdown Preview/MarkdownPreview.sublime-settings",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/SmartMarkdown/SmartMarkdown.sublime-settings",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/libs/eigen3.0.5/Eigen/src/Sparse/MappedSparseMatrix.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/libs/eigen3.0.5/Eigen/src/Sparse/DynamicSparseMatrix.h",
		"/C/Users/fpaboim/Desktop/outtest_brk8.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/SPRmatrixTest.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/SPRmatrix/ELLmatrix.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/main.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/brk8_3.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/output.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/brk8.txt",
		"/C/Users/fpaboim/.vsvimrc",
		"/C/Users/fpaboim/.vimrc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/Report/output.txt",
		"/C/Programming/libs/trilinos-10.8.5-Source/packages/mesquite/src/QualityImprover/OptSolvers/ConjugateGradient.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/SPRmatrix/ELLmatrix.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/_testmodels/Q4.nf",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/femColor.h",
		"/C/Programming/libs/metis-5.0.2/libmetis/mesh.c",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/femColor.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/SPRSearchTest.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/SPRmatrix/SPRmatrix.cc",
		"/C/Programming/libs/metis-4.0.3/Lib/Makefile",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/test_models/2Q4.nf",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/FemData.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Metis4/mesh.h",
		"/C/Programming/libs/metis-4.0.3/Lib/mesh.c",
		"/C/Users/fpaboim/Downloads/manual.ps",
		"/C/Programming/libs/metis-4.0.3/Makefile",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/FEM/fem.h",
		"/C/Programming/libs/metis-4.0.3/INSTALL",
		"/C/Programming/libs/metis-4.0.3/Makefile.in",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/OclTest.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/MeshColoringTest.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/libs/gtest/include/gtest/gtest.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Utils/fileIO.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/FemDataTest.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Utils/util.cc",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/AxyGPUTest.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Microbench/Microbench.cpp",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/libs/eigen3.0.5/doc/examples/Tutorial_ReductionsVisitorsBroadcasting_reductions_bool.cpp",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/VintageLines/vintageLines.py",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/VintageLines/README.md",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Tomorrow Color Schemes/Tomorrow-Night-Bright.tmTheme",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Vintage Numbers/README.md",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/User/SmartMarkdown.sublime-settings",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/libs/metis/include/metis.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Vis/Vis.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Microbench/Microbench.h",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Vis/Vis.cc",
		"/C/Users/fpaboim/Downloads/sparse/cusp/detail/device/generalized_spmv/ell.h",
		"/C/Users/fpaboim/Downloads/eBooks/Literature/ePub eBooks/booklist.txt",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/Test/matlab/ELLgpu_test_validation.m",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Markdown Preview/README.md",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/SublimeClang/SublimeClang.sublime-settings",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/User/SublimeClang.sublime-settings",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/gpu_fem.sublime-project",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/C++/C++.sublime-settings",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Default/Default (Linux).sublime-keymap",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/Markdown/Markdown.tmLanguage",
		"/C/Users/fpaboim/AppData/Roaming/Sublime Text 2/Packages/SublimeBlockCursor/SublimeBlockCursor.py",
		"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/gpufem_notes.txt",
		"/C/Users/fpaboim/Documents/My Dropbox/Sublime/Packages/SublimeBlockCursor/SublimeBlockCursor.py"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 92.0,
		"where_history":
		[
			"C:\\Users\\fpaboim\\Desktop\\parallel_projects\\GPU_FEM\\fpaboim_gpufem\\src\\",
			"C:\\Users\\fpaboim\\Desktop\\parallel_projects\\GPU_FEM\\fpaboim_gpufem\\src\\SPRmatrix",
			"C:\\Users\\fpaboim\\Desktop\\parallel_projects\\GPU_FEM\\fpaboim_gpufem\\src",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"memalloc",
			"coloring",
			"Total exe",
			"matbuff",
			"mattbuf",
			"prop",
			"porps",
			"DONE",
			"Nu",
			"color",
			"Nu",
			"Emod",
			"gausspts",
			"nthreads",
			"devicemode",
			"matfmt",
			"setocl",
			"setLocalwork",
			"localsi",
			"local",
			"locals",
			"band",
			"local",
			"size",
			"printf",
			"computeuni",
			"setting colo",
			"m_femdata",
			"setdevi",
			"m_femdata",
			"stiffness",
			"m_femda",
			"solveDis",
			"outfilew",
			"file",
			"stiff",
			"numCPU",
			"writesol",
			"enum ",
			"vis",
			"locleny",
			"SPMVCoalUR",
			"apple",
			"x1",
			"f",
			"fnnnn",
			"new",
			"TODO",
			"## ",
			"markdown",
			"format",
			"runan",
			"verbose",
			"cpu",
			"@Opencl",
			"write",
			"conn",
			"ncomm",
			"all",
			"reall",
			"growm",
			"grow",
			"set",
			"assemble gpu omp",
			"omp",
			"open",
			"memalloc",
			"step",
			"meshtonodal",
			"metis",
			"util.h",
			"util",
			"idxmalloc",
			"int",
			"GENDUALMETIS",
			"metiselemconn",
			"nodal",
			"setBuildOptions",
			"setbui",
			"GPUOMP",
			"enq",
			"void",
			"    (",
			"void",
			"    (",
			"alloc",
			"global_k",
			"global_Kaux",
			"aux",
			"alloc",
			"define",
			"nnz",
			"const",
			"CalcConstituitiveData",
			"allocm",
			"m_x_gausspts_cpu",
			"SetGaussPoints",
			"check_",
			"check",
			"init",
			"readnf",
			"../",
			"nf",
			"filehandler",
			"devicetype",
			"femtes",
			"femdata",
			"mshcol",
			"mshcolor",
			"elemType",
			"ctrl",
			"find",
			"undo",
			"i",
			"gutt",
			"numb",
			"mall",
			"4",
			"banks",
			"oclstrat",
			"stride",
			"ELL_",
			"BenchCGGPU",
			"    ",
			"\n    ",
			"- b2717519\n- Fa241182\n",
			"split",
			"select_lines"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"SpMVNaive",
			"2012"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Test/AxyGPUTest.cpp",
					"settings":
					{
						"buffer_size": 11757,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 0,
							"vintage_lines.lines": 358,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 2609.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/SPRmatrix/ELLmatrix.cc",
					"settings":
					{
						"buffer_size": 19928,
						"regions":
						{
						},
						"selection":
						[
							[
								3708,
								3708
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 101,
							"vintage_lines.lines": 573,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 1439.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"settings":
					{
						"buffer_size": 2444,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										211,
										219
									],
									[
										539,
										547
									],
									[
										676,
										684
									],
									[
										1029,
										1037
									],
									[
										1357,
										1365
									],
									[
										1494,
										1502
									],
									[
										1900,
										1908
									],
									[
										2103,
										2111
									],
									[
										2366,
										2374
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								1903,
								1903
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false,
							"vintage_lines.line": 35,
							"vintage_lines.lines": 52,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 270.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/OpenCL/clKernels/LAopsEll.cl",
					"settings":
					{
						"buffer_size": 12502,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 0,
							"vintage_lines.lines": 333,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 4590.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/interface.cpp",
					"settings":
					{
						"buffer_size": 21004,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 0,
							"vintage_lines.lines": 573,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 7685.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "test_models/Q8/_Q8_nocol_test.txt",
					"settings":
					{
						"buffer_size": 7008,
						"regions":
						{
						},
						"selection":
						[
							[
								657,
								657
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"vintage_lines.line": 23,
							"vintage_lines.lines": 233,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test_models/Q8/_Q8_col_test.txt",
					"settings":
					{
						"buffer_size": 4228,
						"regions":
						{
						},
						"selection":
						[
							[
								66,
								66
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"vintage_lines.line": 2,
							"vintage_lines.lines": 161,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/FEM/StiffAlgoGpuOmp.cc",
					"settings":
					{
						"buffer_size": 15624,
						"regions":
						{
						},
						"selection":
						[
							[
								13374,
								13374
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 293,
							"vintage_lines.lines": 346,
							"vintage_lines.mode": true
						},
						"translation.x": 39.0,
						"translation.y": 4752.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/FEM/StiffAlgoCPU.cc",
					"settings":
					{
						"buffer_size": 14324,
						"regions":
						{
						},
						"selection":
						[
							[
								5927,
								5927
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 138,
							"vintage_lines.lines": 332,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 1851.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 9,
					"file": "gpufem_notes.md",
					"settings":
					{
						"buffer_size": 7451,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"spell_check": true,
							"syntax": "Packages/Markdown/Markdown.tmLanguage",
							"vintage_lines.line": 0,
							"vintage_lines.lines": 83,
							"vintage_lines.mode": true,
							"wrap_width": 0
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/FEM/fem.h",
					"settings":
					{
						"buffer_size": 3185,
						"regions":
						{
						},
						"selection":
						[
							[
								2869,
								2869
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 75,
							"vintage_lines.lines": 86,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 719.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/Test/main.cpp",
					"settings":
					{
						"buffer_size": 2102,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close"
							],
							"line_numbers": false,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"vintage_lines.line": 0,
							"vintage_lines.lines": 54,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 216.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "test_models/Q8/Q8_2_nocol.txt",
					"settings":
					{
						"buffer_size": 4339,
						"regions":
						{
						},
						"selection":
						[
							[
								2271,
								2271
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"vintage_lines.line": 64,
							"vintage_lines.lines": 118,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "test_models/Q8/Q8_3_nocol.txt",
					"settings":
					{
						"buffer_size": 4337,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"vintage_lines.line": 0,
							"vintage_lines.lines": 118,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "test_models/Q8/Q8_2_col.txt",
					"settings":
					{
						"buffer_size": 4340,
						"regions":
						{
						},
						"selection":
						[
							[
								464,
								464
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"vintage_lines.line": 16,
							"vintage_lines.lines": 118,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 54.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "test_models/Q8/Q8_3_col.txt",
					"settings":
					{
						"buffer_size": 4340,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"line_numbers": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"vintage_lines.line": 0,
							"vintage_lines.lines": 118,
							"vintage_lines.mode": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 38.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.clang":
	{
		"height": 117.0
	},
	"output.exec":
	{
		"height": 207.0
	},
	"output.find_results":
	{
		"height": 333.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": false,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"stiffcpu",
				"src/FEM/StiffAlgoCPU.cc"
			],
			[
				"gpuomp",
				"src/FEM/StiffAlgoGpuOmp.cc"
			],
			[
				"stiffalgogpu",
				"src/FEM/StiffAlgoGPU.cc"
			],
			[
				"_q",
				"test_models/Q8/_Q8_nocol_test.txt"
			],
			[
				"inter",
				"src/interface.cpp"
			],
			[
				"q8_2",
				"test_models/Q8/Q8_2_nocol.txt"
			],
			[
				"_",
				"test_models/Q8/_Q8_2_nocol_test.txt"
			],
			[
				"ell.cl",
				"src/OpenCL/clKernels/LAopsEll.cl"
			],
			[
				"test",
				"src/Test/FemTest.cpp"
			],
			[
				"openclw",
				"src/OpenCL/OCLwrapper.h"
			],
			[
				"ocl",
				"src/OpenCL/OCLwrapper.cc"
			],
			[
				"ell",
				"src/SPRmatrix/ELLmatrix.cc"
			],
			[
				"stiffalgo.c",
				"src/FEM/StiffAlgo.cc"
			],
			[
				"siffalgpuo",
				"src/FEM/StiffAlgoGpuOmp.cc"
			],
			[
				"stiffalgogpuom",
				"src/FEM/StiffAlgoGpuOmp.h"
			],
			[
				"stiffalgocpu.h",
				"src/FEM/StiffAlgoCPU.h"
			],
			[
				"stiffal.h",
				"src/FEM/StiffAlgo.h"
			],
			[
				"stiffagpu.h",
				"src/FEM/StiffAlgoGPU.h"
			],
			[
				"fem.h",
				"src/FEM/fem.h"
			],
			[
				"fem.cc",
				"src/FEM/fem.cc"
			],
			[
				"stiffalgoc",
				"src/FEM/StiffAlgoCPU.cc"
			],
			[
				"stiffal",
				"src/FEM/StiffAlgo.cc"
			],
			[
				"cg.m",
				"Report/matlab/runcg.m"
			],
			[
				"runcg",
				"Report/matlab/runcg.m"
			],
			[
				"gpufemnotes",
				"gpufem_notes.md"
			],
			[
				"cgcl",
				"src/OpenCL/clKernels/gpuCG_ELL.cl"
			],
			[
				"fileio.cc",
				"src/Utils/fileIO.cc"
			],
			[
				"fileo",
				"src/Utils/fileIO.cc"
			],
			[
				"file",
				"src/Utils/fileIO.cc"
			],
			[
				"stiffgpu",
				"src/FEM/StiffAlgoGPU.cc"
			],
			[
				".nf",
				"test_models/_testmodels/Q4.nf"
			],
			[
				"sprma",
				"src/SPRmatrix/SPRmatrix.cc"
			],
			[
				"ellma.h",
				"src/SPRmatrix/ELLmatrix.h"
			],
			[
				"spr.h",
				"src/SPRmatrix/SPRmatrix.h"
			],
			[
				"stiffalgo",
				"src/FEM/StiffAlgoCPU.cc"
			],
			[
				"sprt",
				"src/Test/SPRmatrixTest.cpp"
			],
			[
				"ellma",
				"src/SPRmatrix/ELLmatrix.cc"
			],
			[
				"seartest",
				"src/Test/SPRSearchTest.cpp"
			],
			[
				"mesh",
				"src/Metis4/mesh.c"
			],
			[
				"femcol.h",
				"src/FEM/femColor.h"
			],
			[
				"femcolo.h",
				"src/FEM/femColor.h"
			],
			[
				"2q4.n",
				"test_models/2Q4.nf"
			],
			[
				"notes",
				"gpufem_notes.md"
			],
			[
				"color.h",
				"src/FEM/femColor.h"
			],
			[
				"ocltes",
				"src/Test/OclTest.cpp"
			],
			[
				"oclte",
				"src/Test/OclTest.cpp"
			],
			[
				"oclwra",
				"src/OpenCL/OCLwrapper.cc"
			],
			[
				"ocltest",
				"src/Test/OclTest.cpp"
			],
			[
				"stiffgpuom",
				"src/FEM/StiffAlgoGpuOmp.cc"
			],
			[
				"stiffa",
				"src/FEM/StiffAlgoCPU.cc"
			],
			[
				"util",
				"src/Utils/util.cc"
			],
			[
				"microb",
				"src/Microbench/Microbench.cpp"
			],
			[
				"femtest",
				"src/Test/FemDataTest.cpp"
			],
			[
				"femdatatest",
				"src/Test/FemDataTest.cpp"
			],
			[
				"fileio.h",
				"src/Utils/fileIO.h"
			],
			[
				"femcolo",
				"src/FEM/femColor.cc"
			],
			[
				"src/test",
				"src/Test/SPRSearchTest.cpp"
			],
			[
				"vis.h",
				"src/Vis/Vis.h"
			],
			[
				"v",
				"src/Vis/Vis.cc"
			],
			[
				"main",
				"src/Test/main.cpp"
			],
			[
				"teset.m",
				"src/Test/matlab/ELLgpu_test_validation.m"
			],
			[
				"u",
				"src/Utils/util.cc"
			],
			[
				"oclw",
				"src/OpenCL/OCLwrapper.cc"
			],
			[
				"xytest",
				"src/Test/AxyGPUTest.cpp"
			],
			[
				"clwra",
				"src/OpenCL/OCLwrapper.cc"
			],
			[
				"sprma.cc",
				"src/SPRmatrix/SPRmatrix.cc"
			],
			[
				"sprma.h",
				"src/SPRmatrix/SPRmatrix.h"
			],
			[
				"prmatrix.h",
				"src/SPRmatrix/SPRmatrix.h"
			],
			[
				"laopste",
				"src/Test/LAopsTest.cpp"
			],
			[
				"laops.cl",
				"src/OpenCL/clKernels/LAopsEll.cl"
			],
			[
				"ellma.c",
				"src/SPRmatrix/ELLmatrix.cc"
			],
			[
				"micro",
				"src/Microbench/Microbench.cpp"
			],
			[
				"valida",
				"src/Test/ELLgpu_test_validation.m"
			],
			[
				"laops.h",
				"src/LAops/LAops.h"
			],
			[
				"laop",
				"src/Test/LAopsTest.cpp"
			],
			[
				"laops",
				"src/LAops/LAops.cc"
			],
			[
				"gpuf",
				"/C/Users/fpaboim/Desktop/parallel_projects/GPU_FEM/fpaboim_gpufem/src/OpenCL/clKernels/gpuFEM_Q8.cl"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/C/Programming/Tecgraf/mvgeo/mvgeo.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 293.0,
	"status_bar_visible": true
}
